{"version":3,"sources":["api.ts","authentication/authService.ts","authentication/LoginPage.tsx","boards/boardActions.ts","boards/boardStyle.ts","boards/boardThunks.ts","boards/AddBoard.tsx","boards/Boards.tsx","shared/onEscapeOrEnter.ts","shared/useOutsideClickAlert.ts","lists/AddItem.tsx","lists/AddItemList.tsx","shared/useEscapeClick.ts","cards/cardActions.ts","lists/listActions.ts","cards/cardThunks.ts","shared/ConfirmationModal.tsx","cards/Comment.tsx","cards/EditCard.tsx","cards/Card.tsx","lists/listThunks.ts","lists/List.tsx","boards/KanbanBoard.tsx","authentication/Account.tsx","header/Header.tsx","shared/ProtectedRoute.tsx","boards/boardReducer.ts","cards/cardReducer.ts","lists/listReducer.ts","store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["key","window","localStorage","getItem","token","axiosInstance","axios","create","baseURL","params","isAuthenticated","undefined","authenticate","setItem","defaults","setKeyAndToken","clearLocalStorage","clear","LoginPage","useState","setKey","setToken","history","useHistory","className","type","value","onChange","e","target","onClick","push","fetchBoardsSucceeded","boards","boardPrefs","setBackgroundColor","color","document","documentElement","style","setProperty","setTextColor","background","setBackgroundImage","image","getMapOfBoardPref","mapOfBoardPref","Map","forEach","board","set","id","prefs","fetchBoards","dispatch","a","API","get","then","response","status","data","connect","createBoard","name","post","isAddingBoard","setIsAddingBoard","setName","autoFocus","Board","backgroundImage","backgroundColor","state","useEffect","boardsComponents","map","onEscapeOrEnter","event","onEscape","onEnter","stopPropagation","useOutsideClickAlert","ref","onClickOutside","handleClickOutside","current","contains","addEventListener","removeEventListener","AddItem","title","handleAddItemClicked","addItemFormRef","useRef","setIsAddingItem","isAddingItem","newItemName","setNewItemName","addItemAndHideForm","replace","rows","onKeyUp","handleOnKeyUp","AddItemList","handleAddListClicked","index","draggableId","isDragDisabled","provided","innerRef","draggableProps","dragHandleProps","useEscapeClick","fetchListsSucceeded","lists","updateListSucceeded","list","addCardSucceeded","card","idList","archiveListSucceeded","updateCardSucceeded","archiveCardSucceeded","idCard","reorderListsSucceeded","fetchCardById","ConfirmationModal","show","close","onConfirm","modalContentRef","updateComment","action","put","text","comment","deleteComment","idAction","delete","isInEditState","setIsInEditState","setText","showConfirmationMdoal","setShowConfirmationMdoal","handleSaveCommentClicked","date","Date","memberCreator","fullName","toLocaleString","disabled","cards","resetCardState","updateCard","headers","addComment","archiveCard","setIsBtnSaveCommentVisible","setTitle","description","setDescription","setComment","isBtnSaveCommentVisible","desc","onAddComment","comments","actions","onBlur","currentTarget","relatedTarget","placeholder","onFocus","blur","updatedCard","Card","showEditCradModal","setShowEditCradModal","reorder","from","to","shallow","splice","randomInRange","min","max","Math","floor","random","getSurroundingLists","listId","movedListNewIndex","find","indexOf","pos","Number","MAX_SAFE_INTEGER","updateMovedCard","movedCard","newIdList","movedBetween1st","newPos","addCard","archiveList","updateListName","isListNameBeingUpdated","setIsListNameBeingUpdated","updatedListName","setUpdatedListName","cardComponents","droppableId","direction","ignoreContainerClipping","isCombineEnabled","droppableProps","handleAddCard","BoardName","boardPreferences","fetchLists","idBoard","addList","onDragEnd","result","source","destination","reorderedLists","movedBetween2nd","catch","movedFromList","movedToList","updatedCardList","movedFromListCopy","JSON","parse","stringify","movedToListCopy","l","useParams","boardName","backgroundBrightness","setBackgroundColorFromPreferences","listsComponents","length","Account","isMenuOpen","setIsMenuOpen","Header","pathname","useLocation","ProtectedRoute","Component","component","rest","render","props","initialSate","listReducer","updating","cardReducer","newActionsList","concat","updatedComment","updatedListWithCard","filter","listWithoutCard","cardsWithoutUpdatedOne","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","path","exact","KanbanBoardView","Boards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d15061e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst key = window.localStorage.getItem(\"key\");\nconst token = window.localStorage.getItem(\"token\");\n\nconst axiosInstance = axios.create({\n  baseURL: `https://api.trello.com/1/`,\n  params: {\n    key,\n    token,\n  },\n});\n\nexport const setKeyAndToken = (key: string, token: string) => {\n  axiosInstance.defaults.params = {\n    key,\n    token,\n  };\n};\n\nexport const resetParams = () => {\n  axiosInstance.defaults.params = {};\n};\n\nexport default axiosInstance;\n","import { resetParams, setKeyAndToken } from \"../api\";\n\nexport function isAuthenticated() {\n  const key = window.localStorage.getItem(\"key\");\n  const token = window.localStorage.getItem(\"token\");\n\n  return (\n    key !== undefined &&\n    key !== \"\" &&\n    key !== null &&\n    token !== null &&\n    token !== undefined &&\n    token !== \"\"\n  );\n}\n\nexport function authenticate(key: string, token: string) {\n  window.localStorage.setItem(\"key\", key);\n  window.localStorage.setItem(\"token\", token);\n\n  setKeyAndToken(key, token);\n}\n\nexport function clearLocalStorage() {\n  window.localStorage.clear();\n\n  resetParams();\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authenticate } from \"./authService\";\n\nfunction LoginPage() {\n  const [key, setKey] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const history = useHistory();\n\n  const login = () => {\n    authenticate(key, token);\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form className=\"w-25 mx-auto mt-5 pt-5 text-dark\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Key</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={key}\n            onChange={(e) => setKey(e.target.value)}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Token</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={token}\n            onChange={(e) => setToken(e.target.value)}\n          />\n        </div>\n        <button className=\"btn btn-info text-light w-100 mt-3\" onClick={login}>\n          Continue\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","export const fetchBoardsSucceeded = (\n  boards: Board[],\n  boardPrefs: Map<string, BoardPref>\n) =>\n  ({\n    type: \"FETCH_BOARDS_SUCCEEDED\",\n    boards,\n    boardPrefs,\n  } as const);\n","export const resetColors = () => {\n  setBackgroundColor(\"white\");\n  setTextColor(\"light\");\n  setBackgroundImage(\"\");\n};\n\nexport const setBackgroundColorFromPreferences = (\n  boardPreferences: BoardPref | undefined\n) => {\n  if (boardPreferences === undefined) return;\n\n  if (boardPreferences.backgroundImage) {\n    setBackgroundImage(boardPreferences.backgroundImage);\n    return;\n  }\n\n  const color = boardPreferences.backgroundColor;\n  if (color) {\n    setBackgroundColor(color);\n    setTextColor(boardPreferences.backgroundBrightness);\n  }\n};\n\nconst setBackgroundColor = (color: string) => {\n  document.documentElement.style.setProperty(\"--root-color\", color);\n};\n\nconst setTextColor = (background: BackgroundBrigthness) => {\n  if (background === \"light\") {\n    document.documentElement.style.setProperty(\"--text-color\", \"#172b4d\");\n  } else if (background === \"dark\") {\n    document.documentElement.style.setProperty(\"--text-color\", \"#ebecf0\");\n  }\n};\n\nconst setBackgroundImage = (image: string) => {\n  document.documentElement.style.setProperty(\n    \"--root-image\",\n    \"url(\" + image + \")\"\n  );\n};\n\nexport const getMapOfBoardPref = (boards: Board[]) => {\n  const mapOfBoardPref: Map<string, BoardPref> = new Map();\n\n  boards.forEach((board) => {\n    mapOfBoardPref.set(board.id, board.prefs);\n  });\n\n  return mapOfBoardPref;\n};\n","import API from \"../api\";\nimport { fetchBoardsSucceeded } from \"./boardActions\";\nimport { getMapOfBoardPref } from \"./boardStyle\";\n\ntype DispatchType = (args: ListAction | ListEmptyAction) => ListAction;\n\nexport const fetchBoards = () => async (dispatch: DispatchType) => {\n  API.get<Board[]>(\"members/me/boards\").then((response) => {\n    if (response.status === 200) {\n      const boards = response.data;\n      dispatch(fetchBoardsSucceeded(boards, getMapOfBoardPref(boards)));\n    }\n  });\n};\n\nexport const createBoard =\n  (name: string) => async (dispatch: DispatchType | any) => {\n    API.post<Board>(\"boards\", null, { params: { name } }).then((response) => {\n      if (response.status === 200) {\n        dispatch(fetchBoards());\n      }\n    });\n  };\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createBoard } from \"./boardThunks\";\n\ninterface AddNewBoardProps {\n  createBoard: (name: string) => void;\n}\n\nfunction AddNewBoard({ createBoard }: AddNewBoardProps) {\n  const [isAddingBoard, setIsAddingBoard] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const handleAddBoardClick = () => {\n    if (name !== \"\") {\n      createBoard(name);\n      setIsAddingBoard(false);\n      setName(\"\");\n    }\n  };\n\n  return (\n    <div className=\"rounded board\">\n      {isAddingBoard ? (\n        <div className=\"board-content rounded hover-effect-none\">\n          <input\n            type=\"text\"\n            className=\"form-control add-board-input\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            autoFocus\n          />\n          <button\n            className=\"btn btn-sm btn-dark mt-2 ms-2\"\n            onClick={handleAddBoardClick}\n          >\n            Save\n          </button>\n        </div>\n      ) : (\n        <div\n          className=\"board-content rounded d-flex align-items-center justify-content-center hover-opacity-effect\"\n          onClick={() => setIsAddingBoard(true)}\n        >\n          Add new board\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default connect(null, { createBoard })(AddNewBoard);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { ApplicationState } from \"../store\";\nimport AddNewBoard from \"./AddBoard\";\nimport { fetchBoards } from \"./boardThunks\";\n\ninterface BoardsProps {\n  boards: Board[];\n  fetchBoards: () => void;\n}\n\nfunction Boards({ boards, fetchBoards }: BoardsProps) {\n  useEffect(() => {\n    fetchBoards();\n  }, [fetchBoards]);\n\n  const boardsComponents = boards?.map((board) => (\n    <Board key={board.id} board={board} />\n  ));\n\n  return (\n    <div className=\"container my-3\">\n      <p className=\"fs-5 fw-bold text-dark\">Boards</p>\n      <div className=\"mt-3\">\n        {boardsComponents}\n        <AddNewBoard />\n      </div>\n    </div>\n  );\n}\n\ninterface BoardProps {\n  board: Board;\n}\n\nfunction Board({ board }: BoardProps) {\n  let history = useHistory();\n\n  return (\n    <div\n      className=\"rounded board hover-opacity-effect\"\n      style={{\n        backgroundImage: `url(${board.prefs.backgroundImage})`,\n        backgroundColor: `${board.prefs.backgroundColor}`,\n      }}\n      onClick={() => history.push(`b/${board.id}/${board.name}`)}\n    >\n      <div className=\"board-content rounded ps-3 py-2\">{board.name}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  boards: state.boards.boards,\n});\n\nexport default connect(mapStateToProps, { fetchBoards })(Boards);\n","export function onEscapeOrEnter(\n  event: KeyboardEvent,\n  onEscape: () => void,\n  onEnter: () => void\n) {\n  event.stopPropagation();\n  if (event.key === \"Escape\") {\n    onEscape();\n  } else if (event.key === \"Enter\") {\n    onEnter();\n  }\n}\n","import { useEffect } from \"react\";\n\nexport function useOutsideClickAlert(\n  ref: React.RefObject<any>,\n  onClickOutside: () => void\n) {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onClickOutside();\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, onClickOutside]);\n}\n","import { useRef, useState } from \"react\";\nimport { onEscapeOrEnter } from \"../shared/onEscapeOrEnter\";\nimport { useOutsideClickAlert } from \"../shared/useOutsideClickAlert\";\n\ninterface AddItemProps {\n  title: string;\n  handleAddItemClicked: (value: string) => void;\n}\n\nfunction AddItem({ title, handleAddItemClicked }: AddItemProps) {\n  const addItemFormRef = useRef(null);\n  useOutsideClickAlert(addItemFormRef, () => setIsAddingItem(false));\n  const [isAddingItem, setIsAddingItem] = useState<boolean>(false);\n  const [newItemName, setNewItemName] = useState<string>(\"\");\n\n  const handleOnKeyUp = (e: any) => {\n    onEscapeOrEnter(\n      e,\n      () => setIsAddingItem(false),\n      () => addItemAndHideForm()\n    );\n  };\n\n  const addItemAndHideForm = () => {\n    const name = newItemName.replace(/\\n/g, \"\");\n    if (name !== \"\") {\n      handleAddItemClicked(newItemName);\n      setIsAddingItem(false);\n      setNewItemName(\"\");\n    }\n  };\n\n  if (!isAddingItem) {\n    return (\n      <div className=\"py-1 my-1 add-item\" onClick={() => setIsAddingItem(true)}>\n        <i className=\"bi bi-plus me-2\" />\n        {title}\n      </div>\n    );\n  }\n  return (\n    <form className=\"py-1 my-1 mx-1\" ref={addItemFormRef}>\n      <textarea\n        rows={3}\n        className=\"form-control bg-secondary border-secondary add-item-teaxtarea text-light\"\n        value={newItemName}\n        onChange={(e) => setNewItemName(e.target.value)}\n        autoFocus\n        onKeyUp={(e) => handleOnKeyUp(e)}\n      />\n      <div className=\"mt-1\">\n        <button\n          type=\"button\"\n          className=\"btn btn-info btn-sm text-dark\"\n          onClick={() => addItemAndHideForm()}\n        >\n          Add item\n        </button>\n        <i\n          className=\"bi bi-x fs-4 align-middle\"\n          onClick={() => setIsAddingItem(false)}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default AddItem;\n","import React from \"react\";\nimport { Draggable, DraggableProvided } from \"react-beautiful-dnd\";\nimport AddItem from \"./AddItem\";\n\ninterface AddItemListProps {\n  handleAddListClicked: (name: string) => void;\n  index: number;\n}\n\nfunction AddItemList({ handleAddListClicked, index }: AddItemListProps) {\n  return (\n    <Draggable draggableId={\"id\"} index={index} isDragDisabled={true}>\n      {(provided: DraggableProvided) => (\n        <div\n          className=\"rounded kanban-column p-2 align-self-start mx-1\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <AddItem\n            title=\"Add another list\"\n            handleAddItemClicked={(name) => handleAddListClicked(name)}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nexport default AddItemList;\n","import { useEffect } from \"react\";\n\nexport function useEscapeClick(onEscape: () => void) {\n  useEffect(() => {\n    function handleClickOutside(event: KeyboardEvent) {\n      //@ts-ignore\n      if (event.target?.id === \"comment\") {\n        return;\n      }\n      if (event.key === \"Escape\") {\n        onEscape();\n      }\n    }\n\n    document.addEventListener(\"keydown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"keydown\", handleClickOutside);\n    };\n  }, [onEscape]);\n}\n","export const fetchCardByIdSucceeded = (card: Card) =>\n  ({\n    type: \"FETCH_CARD_BY_ID_SUCCEEDED\",\n    card,\n  } as const);\n\nexport const resetCardState = () =>\n  ({\n    type: \"RESET_CARD_STATE\",\n  } as const);\n\nexport const addCommentSucceeded = (comment: Action) =>\n  ({\n    type: \"ADD_COMMENT_SUCCEEDED\",\n    comment,\n  } as const);\n\nexport const updateCommentSucceeded = (comment: Action) =>\n  ({\n    type: \"UPDATE_COMMENT_SUCCEEDED\",\n    comment,\n  } as const);\n","export const fetchListsSucceeded = (lists: List[]) =>\n  ({\n    type: \"FETCH_LISTS_SUCCEEDED\",\n    lists,\n  } as const);\n\nexport const addListSucceeded = (list: List) =>\n  ({\n    type: \"ADD_LIST_SUCCEEDED\",\n    list,\n  } as const);\n\nexport const updateListSucceeded = (list: List) =>\n  ({\n    type: \"UPDATE_LIST_SUCCEEDED\",\n    list,\n  } as const);\n\nexport const addCardSucceeded = (card: Card, idList: string) =>\n  ({\n    type: \"ADD_CARD_SUCCEEDED\",\n    card,\n    idList,\n  } as const);\n\nexport const archiveListSucceeded = (idList: string) =>\n  ({\n    type: \"ARCHIVE_LIST_SUCCEEDED\",\n    idList,\n  } as const);\n\nexport const updateCardSucceeded = (card: Card) =>\n  ({\n    type: \"UPDATE_CARD_SUCCEEDED\",\n    card,\n  } as const);\n\nexport const archiveCardSucceeded = (idCard: string) =>\n  ({\n    type: \"ARCHIVE_CARD_SUCCEEDED\",\n    idCard,\n  } as const);\n\nexport const reorderListsSucceeded = (lists: List[]) =>\n  ({\n    type: \"REORDER_LISTS_SUCCEEDED\",\n    lists,\n  } as const);\n\nexport const reorderCardsSucceeded = (lists: List[]) =>\n  ({\n    type: \"REORDER_CARDS_SUCCEEDED\",\n    lists,\n  } as const);\n","import API from \"../api\";\nimport {\n  archiveCardSucceeded,\n  updateCardSucceeded,\n} from \"../lists/listActions\";\nimport {\n  addCommentSucceeded,\n  fetchCardByIdSucceeded,\n  updateCommentSucceeded,\n} from \"./cardActions\";\n\ntype DispatchType = (args: CardAction | CardEmptyAction) => CardAction;\n\nexport const fetchCardById = (idCard: string) => async (\n  dispatch: DispatchType\n) => {\n  API.get<Card>(\n    \"cards/\" + idCard + \"?fields=id,idList,name,desc&actions=commentCard\"\n  ).then(({ status, data }) => {\n    if (status === 200) {\n      dispatch(fetchCardByIdSucceeded(data));\n    }\n  });\n};\n\nexport const updateCard = (card: Card) => async (\n  dispatch: DispatchType | any\n) => {\n  API.put<Card>(\"cards/\" + card.id, card, {\n    headers: { \"Content-Type\": \"application/json\" },\n  }).then((response) => {\n    if (response.status === 200) {\n      dispatch(updateCardSucceeded(response.data));\n    }\n  });\n};\n\nexport const addComment = (idCard: string, text: string) => async (\n  dispatch: DispatchType\n) => {\n  API.post<Action>(\"cards/\" + idCard + \"/actions/comments?text=\" + text).then(\n    (response) => {\n      if (response.status === 200) {\n        dispatch(addCommentSucceeded(response.data));\n      }\n    }\n  );\n};\n\nexport const updateComment = (action: Action) => async (\n  dispatch: DispatchType\n) => {\n  API.put<Action>(\"actions/\" + action.id, null, {\n    params: { text: action.data.text },\n  }).then((response) => {\n    if (response.status === 200) {\n      dispatch(updateCommentSucceeded(response.data));\n    }\n  });\n};\n\nexport const deleteComment = (idAction: string, idCard: string) => async (\n  dispatch: DispatchType | any\n) => {\n  API.delete<Action>(\"actions/\" + idAction).then((response) => {\n    if (response.status === 200) {\n      dispatch(fetchCardById(idCard));\n    }\n  });\n};\n\nexport const archiveCard = (idCard: string) => async (\n  dispatch: DispatchType\n) => {\n  API.delete(\"cards/\" + idCard).then((response) => {\n    if (response.status === 200) {\n      dispatch(archiveCardSucceeded(idCard));\n    }\n  });\n};\n","import React, { useRef } from \"react\";\nimport { useEscapeClick } from \"./useEscapeClick\";\nimport { useOutsideClickAlert } from \"./useOutsideClickAlert\";\n\ninterface ConfirmationModalprops {\n  show: boolean;\n  close: () => void;\n  onConfirm: () => void;\n}\n\nfunction ConfirmationModal({ show, close, onConfirm }: ConfirmationModalprops) {\n  const modalContentRef = useRef(null);\n  useOutsideClickAlert(modalContentRef, () => {\n    close();\n  });\n\n  useEscapeClick(() => close());\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"confirmation-modal fs-6 text-dark\">\n      <div ref={modalContentRef} className=\"confirmation-modal-content\">\n        <div className=\"d-flex justify-content-between\">\n          <span className=\"text-center w-100\">Are you sure? </span>\n          <i className=\"bi bi-x\" onClick={close} />\n        </div>\n        <hr />\n        <div className=\"mb-4\">Deleting is forever. There is no undo.</div>\n        <div className=\"text-center\">\n          <button\n            className=\"btn btn-dark py-1 w-100\"\n            onClick={() => {\n              close();\n              onConfirm();\n            }}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConfirmationModal;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ConfirmationModal from \"../shared/ConfirmationModal\";\nimport { onEscapeOrEnter } from \"../shared/onEscapeOrEnter\";\nimport { deleteComment, updateComment } from \"./cardThunks\";\n\ninterface CommentProps {\n  comment: Action;\n  updateComment: (comment: Action) => void;\n  deleteComment: (idAction: string, idcard: string) => void;\n}\n\nfunction Comment({ comment, updateComment, deleteComment }: CommentProps) {\n  const [isInEditState, setIsInEditState] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [showConfirmationMdoal, setShowConfirmationMdoal] = useState(false);\n\n  useEffect(() => {\n    setText(comment.data.text);\n  }, [comment]);\n\n  const handleOnKeyUp = (e: any) => {\n    onEscapeOrEnter(\n      e,\n      () => setIsInEditState(false),\n      () => handleSaveCommentClicked()\n    );\n  };\n\n  const handleSaveCommentClicked = () => {\n    const action = { ...comment, data: { ...comment.data, text } };\n    updateComment(action);\n    setIsInEditState(false);\n  };\n\n  const date = new Date(comment.date);\n  return (\n    <div className=\"inline-flex my-2 mx-2\">\n      <ConfirmationModal\n        close={() => setShowConfirmationMdoal(false)}\n        show={showConfirmationMdoal}\n        onConfirm={() => deleteComment(comment.id, comment.data.card.id)}\n      />\n      <div className=\"small-text fw-bold\">\n        {comment.memberCreator.fullName}\n        <span className=\"mx-2 fw-light\">{date.toLocaleString()}</span>\n      </div>\n      <input\n        className=\"edit-card-title-input mt-1\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        onKeyUp={(e) => handleOnKeyUp(e)}\n        disabled={!isInEditState}\n      />\n      {isInEditState ? (\n        <div className=\"align-self-center\">\n          <button\n            className=\"btn btn-sm btn-info text-light\"\n            onClick={handleSaveCommentClicked}\n          >\n            Save\n          </button>\n          <i\n            className=\"bi bi-x fs-3 align-middle ms-2\"\n            onClick={() => setIsInEditState(false)}\n          />\n        </div>\n      ) : (\n        <div className=\"small-text mt-1\">\n          <span\n            className=\"text-dark clickable\"\n            onClick={() => setIsInEditState(true)}\n          >\n            Edit\n          </span>\n          &nbsp;-&nbsp;\n          <span\n            className=\"text-dark clickable\"\n            onClick={() => setShowConfirmationMdoal(true)}\n          >\n            Delete\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default connect(null, {\n  updateComment,\n  deleteComment,\n})(Comment);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { onEscapeOrEnter } from \"../shared/onEscapeOrEnter\";\nimport { useEscapeClick } from \"../shared/useEscapeClick\";\nimport { useOutsideClickAlert } from \"../shared/useOutsideClickAlert\";\nimport { ApplicationState } from \"../store\";\nimport { resetCardState } from \"./cardActions\";\nimport {\n  addComment,\n  archiveCard,\n  fetchCardById,\n  updateCard,\n} from \"./cardThunks\";\nimport Comment from \"./Comment\";\n\ninterface CardProps {\n  card: Card | null;\n  idCard: string;\n  show: boolean;\n  close: () => void;\n  resetCardState: () => void;\n  fetchCardById: (idCard: string) => void;\n  updateCard: (card: Card) => void;\n  addComment: (idCard: string, text: string) => void;\n  archiveCard: (idCard: string) => void;\n}\n\nfunction EditCard({\n  card,\n  idCard,\n  show,\n  close,\n  resetCardState,\n  fetchCardById,\n  updateCard,\n  addComment,\n  archiveCard,\n}: CardProps) {\n  const modalContentRef = useRef(null);\n  useOutsideClickAlert(modalContentRef, () => {\n    setIsBtnSaveCommentVisible(false);\n    close();\n  });\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [isBtnSaveCommentVisible, setIsBtnSaveCommentVisible] = useState(false);\n\n  useEffect(() => {\n    if (show) {\n      fetchCardById(idCard);\n    }\n  }, [fetchCardById, idCard, show]);\n\n  useEffect(() => {\n    setTitle(card?.name || \"\");\n    setDescription(card?.desc || \"\");\n  }, [card]);\n\n  useEscapeClick(close);\n\n  const handleOnKeyUp = (e: any) => {\n    e.stopPropagation();\n    onEscapeOrEnter(\n      e,\n      () => {\n        e.target.blur();\n        setIsBtnSaveCommentVisible(false);\n        setComment(\"\");\n      },\n      () => onAddComment()\n    );\n  };\n\n  const onSave = () => {\n    const updatedCard: Card = {\n      name: title,\n      id: card?.id || \"\",\n      desc: description,\n      idList: card?.idList || \"\",\n      actions: card?.actions || [],\n    };\n    updateCard(updatedCard);\n    close();\n  };\n\n  const onAddComment = () => {\n    addComment(card?.id || \"\", comment);\n    setComment(\"\");\n    setIsBtnSaveCommentVisible(false);\n  };\n\n  const comments = card?.actions?.map((comment) => (\n    <Comment key={comment.id} comment={comment} />\n  ));\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className=\"edit-card-modal text-dark\">\n      <div className=\"edit-card-modal-content row\" ref={modalContentRef}>\n        <div className=\"fs-5 fw-bold mb-3 d-flex justify-content-between align-items-start\">\n          <input\n            type=\"text\"\n            className=\"edit-card-title-input text-wrap\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <i\n            className=\"bi bi-x fs-3 me-2\"\n            onClick={() => {\n              resetCardState();\n              close();\n            }}\n          />\n        </div>\n        <div className=\"col-10\">\n          <div className=\"mb-3\">\n            <span className=\"fw-bold\">Description:</span>\n            <textarea\n              className=\"form-control mt-2\"\n              rows={4}\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-2 d-flex justify-content-between align-items-center fw-bold\">\n            Activity\n          </div>\n          <div\n            className=\"pb-1\"\n            onBlur={(event) => {\n              //@ts-ignore\n              if (!event.currentTarget.contains(event.relatedTarget)) {\n                setIsBtnSaveCommentVisible(false);\n              }\n            }}\n          >\n            <input\n              id=\"comment\"\n              type=\"text\"\n              className=\"form-control border-bottom-0 comment-input\"\n              placeholder=\"Write a comment\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              onFocus={() => setIsBtnSaveCommentVisible(true)}\n              onKeyUp={(e) => handleOnKeyUp(e)}\n            />\n            {isBtnSaveCommentVisible && (\n              <button\n                className=\"btn btn-sm btn-info text-light mt-2 ms-2\"\n                onClick={onAddComment}\n              >\n                Add\n              </button>\n            )}\n          </div>\n          <div>{comments}</div>\n          <button className=\"btn btn-info text-light mt-4\" onClick={onSave}>\n            Save\n          </button>\n        </div>\n        <div className=\"col-2\">\n          <p className=\"fw-bold\">ACTIONS</p>\n          <div\n            className=\"btn btn-info py-1 text-light\"\n            onClick={() => archiveCard(card?.id || \"\")}\n          >\n            Archive\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  card: state.cards.card,\n});\n\nexport default connect(mapStateToProps, {\n  fetchCardById,\n  resetCardState,\n  updateCard,\n  addComment,\n  archiveCard,\n})(EditCard);\n","import React, { useState } from \"react\";\nimport { Draggable, DraggableProvided } from \"react-beautiful-dnd\";\nimport EditCard from \"./EditCard\";\n\ninterface CardProps {\n  card: Card;\n  index: number;\n}\n\nfunction Card({ card, index }: CardProps) {\n  const [showEditCradModal, setShowEditCradModal] = useState(false);\n\n  return (\n    <Draggable draggableId={card.id} index={index}>\n      {(provided: DraggableProvided) => (\n        <div\n          className=\"rounded m-1 px-2 py-1 d-flex justify-content-between text-wrap bg-white\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {card.name}\n          <i\n            className=\"bi bi-pencil-fill ps-1\"\n            onClick={() => setShowEditCradModal(true)}\n          />\n          <EditCard\n            idCard={card.id}\n            show={showEditCradModal}\n            close={() => setShowEditCradModal(false)}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nexport default Card;\n","import { DropResult } from \"react-beautiful-dnd\";\nimport API from \"../api\";\nimport {\n  addCardSucceeded,\n  addListSucceeded,\n  archiveListSucceeded,\n  fetchListsSucceeded,\n  reorderListsSucceeded,\n  updateCardSucceeded,\n  updateListSucceeded,\n} from \"./listActions\";\n\ntype DispatchType = (args: ListAction | ListEmptyAction) => ListAction;\n\nexport const fetchLists = (idBoard: string) => async (\n  dispatch: DispatchType\n) => {\n  API.get<List[]>(\n    \"boards/\" + idBoard + \"/lists?fields=name,id,pos&cards=all\"\n  ).then((response) => {\n    if (response.status === 200) {\n      dispatch(fetchListsSucceeded(response.data));\n    }\n  });\n};\n\nexport const addList = (name: string, idBoard: string) => async (\n  dispatch: DispatchType\n) => {\n  API.post(\"lists\", null, {\n    params: {\n      pos: \"bottom\",\n      name,\n      idBoard,\n    },\n  }).then((response) => dispatch(addListSucceeded(response.data)));\n};\n\nexport const updateListName = (idList: string, name: string) => async (\n  dispatch: DispatchType\n) => {\n  API.put<List>(\"lists/\" + idList, null, {\n    params: {\n      name,\n    },\n  }).then((response) => dispatch(updateListSucceeded(response.data)));\n};\n\nexport const archiveList = (idList: string) => async (\n  dispatch: DispatchType\n) => {\n  API.put<List[]>(\"lists/\" + idList + \"/closed\", null, {\n    params: { value: true },\n  }).then((response) => {\n    if (response.status === 200) {\n      dispatch(archiveListSucceeded(idList));\n    }\n  });\n};\n\nexport const addCard = (name: string, idList: string) => async (\n  dispatch: DispatchType\n) => {\n  API.post(\"cards\", null, {\n    params: {\n      name,\n      idList,\n    },\n  }).then((response) => dispatch(addCardSucceeded(response.data, idList)));\n};\n\nexport const onDragEnd = (result: DropResult, lists: List[]) => async (\n  dispatch: any\n) => {\n  const { source, destination, draggableId } = result;\n  if (!destination) {\n    return;\n  }\n  if (\n    source.droppableId === destination.droppableId &&\n    source.index === destination.index\n  ) {\n    return;\n  }\n  if (result.type === \"COLUMN\") {\n    let reorderedLists = reorder(source.index, destination.index, lists);\n    const [movedBetween1st, movedBetween2nd] = getSurroundingLists(\n      reorderedLists,\n      draggableId\n    );\n\n    if (!movedBetween1st || !movedBetween2nd) {\n      return;\n    }\n\n    const newPos =\n      movedBetween1st.pos === 0\n        ? \"top\"\n        : randomInRange(movedBetween2nd.pos, movedBetween1st.pos);\n    dispatch(reorderListsSucceeded(reorderedLists));\n    API.put<List>(\"lists/\" + draggableId, null, {\n      params: {\n        pos: newPos,\n      },\n    })\n      .then((response) => dispatch(updateListSucceeded(response.data)))\n      .catch((e) => dispatch(reorderListsSucceeded(lists)));\n\n    return;\n  }\n\n  const movedFromList = lists.find((list) => list.id === source.droppableId);\n  const movedToList = lists.find((list) => list.id === destination.droppableId);\n\n  if (!movedToList || !movedFromList) {\n    return;\n  }\n\n  const movedCard =\n    movedFromList.cards.find((card) => card.id === draggableId) || ({} as Card);\n\n  if (movedFromList.id === movedToList.id) {\n    const shallow = reorder(\n      source.index,\n      destination.index,\n      movedFromList.cards\n    );\n    const updatedCardList = lists.map((list) => {\n      if (list.id === source.droppableId) {\n        return { ...list, cards: [...shallow] };\n      }\n      return list;\n    });\n    const updatedCard = updateMovedCard(\n      shallow,\n      draggableId,\n      movedCard,\n      movedToList.id\n    );\n    dispatch(fetchListsSucceeded(updatedCardList));\n    API.put<Card>(\"cards/\" + draggableId, updatedCard, {\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(({ status, data }) => {\n        if (status === 200) {\n          dispatch(updateCardSucceeded(data));\n          dispatch(fetchListsSucceeded(updatedCardList));\n        }\n      })\n      .catch((e) => dispatch(reorderListsSucceeded(lists)));\n\n    return;\n  }\n\n  const movedFromListCopy = JSON.parse(JSON.stringify(movedFromList));\n  const movedToListCopy = JSON.parse(JSON.stringify(movedToList));\n  movedFromList.cards.splice(source.index, 1);\n  movedToList.cards.splice(destination.index, 0, movedCard);\n  const updatedCard = updateMovedCard(\n    movedToList.cards,\n    draggableId,\n    movedCard,\n    movedToList.id\n  );\n  dispatch(updateListSucceeded(movedFromList));\n  dispatch(updateListSucceeded(movedToList));\n  API.put<Card>(\"cards/\" + draggableId, updatedCard, {\n    headers: { \"Content-Type\": \"application/json\" },\n  })\n    .then(({ status, data }) => {\n      if (status === 200) {\n        const reorderedLists = lists.map((l) => {\n          if (l.id === movedToList.id) {\n            return { ...movedToList };\n          } else if (l.id === movedFromList.id) {\n            return { ...movedFromList };\n          }\n          return l;\n        });\n        dispatch(updateCardSucceeded(data));\n        dispatch(fetchListsSucceeded(reorderedLists));\n      }\n    })\n    .catch((e) => {\n      dispatch(updateListSucceeded(movedFromListCopy));\n      dispatch(updateListSucceeded(movedToListCopy));\n    });\n};\n\nfunction reorder(from: number, to: number, list: any[]) {\n  const shallow = [...list];\n  shallow.splice(to, 0, shallow.splice(from, 1)[0]);\n  return shallow;\n}\n\nfunction randomInRange(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getSurroundingLists(list: any[], listId: string): [any, any] {\n  const movedListNewIndex = list.find((list) => list.id === listId);\n  const movedBetween1st = list[list.indexOf(movedListNewIndex) - 1] || {\n    pos: 0,\n  };\n  const movedBetween2nd = list[list.indexOf(movedListNewIndex) + 1] || {\n    pos: Number.MAX_SAFE_INTEGER,\n  };\n  return [movedBetween1st, movedBetween2nd];\n}\n\nfunction updateMovedCard(\n  list: Card[],\n  draggableId: string,\n  movedCard: Card,\n  newIdList: string\n): Card {\n  const [movedBetween1st, movedBetween2nd] = getSurroundingLists(\n    list,\n    draggableId\n  );\n  const newPos = randomInRange(movedBetween2nd.pos, movedBetween1st.pos);\n  const updatedMovedCard = { ...movedCard, pos: newPos, idList: newIdList };\n\n  return updatedMovedCard;\n}\n","import React, { useState } from \"react\";\nimport {\n  Draggable,\n  DraggableProvided,\n  Droppable,\n  DroppableProvided,\n} from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport Card from \"../cards/Card\";\nimport ConfirmationModal from \"../shared/ConfirmationModal\";\nimport AddItem from \"./AddItem\";\nimport { addCard, archiveList, updateListName } from \"./listThunks\";\n\ninterface ListProps {\n  list: List;\n  index: number;\n  addCard: (name: string, idList: string) => void;\n  archiveList: (idList: string) => void;\n  updateListName: (isList: string, name: string) => void;\n}\n\nfunction List({\n  list,\n  addCard,\n  archiveList,\n  updateListName,\n  index,\n}: ListProps) {\n  const [isListNameBeingUpdated, setIsListNameBeingUpdated] = useState(false);\n  const [updatedListName, setUpdatedListName] = useState(list.name);\n  const [showConfirmationMdoal, setShowConfirmationMdoal] = useState(false);\n\n  const handleAddCard = (name: string) => {\n    addCard(name, list?.id);\n  };\n\n  const handleUpdateListName = () => {\n    if (updatedListName !== list.name) {\n      updateListName(list.id, updatedListName);\n    }\n    setIsListNameBeingUpdated(false);\n  };\n\n  const cardComponents = list?.cards?.map((card, index) => (\n    <Card key={card.id} card={card} index={index} />\n  ));\n\n  return (\n    <div className=\"mx-1\">\n      <ConfirmationModal\n        close={() => setShowConfirmationMdoal(false)}\n        show={showConfirmationMdoal}\n        onConfirm={() => archiveList(list.id)}\n      />\n      <Draggable draggableId={list.id} index={index}>\n        {(provided: DraggableProvided) => (\n          <div\n            className=\"rounded kanban-column align-self-start p-2\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            {isListNameBeingUpdated ? (\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={updatedListName}\n                onChange={(e) => setUpdatedListName(e.target.value)}\n                onBlur={() => handleUpdateListName()}\n                autoFocus\n              />\n            ) : (\n              <div className=\"list-title p-1 d-flex justify-content-between\">\n                <span onClick={() => setIsListNameBeingUpdated(true)}>\n                  {list.name}\n                </span>\n                <i\n                  className=\"bi bi-trash\"\n                  onClick={() => setShowConfirmationMdoal(true)}\n                />\n              </div>\n            )}\n            <div className=\"column-content\">\n              <Droppable\n                droppableId={list.id}\n                type=\"CARD\"\n                direction=\"vertical\"\n                ignoreContainerClipping={true}\n                isCombineEnabled={false}\n              >\n                {(provided: DroppableProvided) => (\n                  <div>\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {cardComponents}\n                    </div>\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n            <AddItem\n              title=\"Add another card\"\n              handleAddItemClicked={(name) => handleAddCard(name)}\n            />\n          </div>\n        )}\n      </Draggable>\n    </div>\n  );\n}\n\nexport default connect(null, { addCard, archiveList, updateListName })(List);\n","import React, { useEffect } from \"react\";\nimport {\n  DragDropContext,\n  Droppable,\n  DroppableProvided,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AddItemList from \"../lists/AddItemList\";\nimport List from \"../lists/List\";\nimport { fetchListsSucceeded } from \"../lists/listActions\";\nimport { addList, fetchLists, onDragEnd } from \"../lists/listThunks\";\nimport { ApplicationState } from \"../store\";\nimport { resetColors, setBackgroundColorFromPreferences } from \"./boardStyle\";\n\ninterface KanbanBoardProps {\n  lists: List[];\n  boardPreferences: Map<string, BoardPref>;\n  fetchLists: (idBoard: string) => void;\n  addList: (name: string, idBoard: string) => Promise<void>;\n  onDragEnd: (result: DropResult, lists: List[]) => void;\n  fetchListsSucceeded: (lists: List[]) => void;\n}\n\nfunction KanbanBoard({\n  fetchLists,\n  lists,\n  boardPreferences,\n  addList,\n  onDragEnd,\n  fetchListsSucceeded,\n}: KanbanBoardProps) {\n  const { id, name: boardName } = useParams<RouterParamTypes>();\n\n  useEffect(() => {\n    fetchLists(id);\n\n    setBackgroundColorFromPreferences(boardPreferences.get(id));\n\n    return () => {\n      fetchListsSucceeded([]);\n      resetColors();\n    };\n  }, [fetchLists, fetchListsSucceeded, id]);\n\n  const handleAddListClicked = (name: string) => {\n    if (name === \"\") {\n      return;\n    }\n    addList(name, id);\n  };\n\n  const handleDragEnd = (result: DropResult) => {\n    onDragEnd(result, lists);\n  };\n\n  const listsComponents = lists?.map((list: List, index: number) => (\n    <List key={list.id} list={list} index={index} />\n  ));\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <BoardName name={boardName} />\n      <div\n        className=\"p-2 horizontal-scrollable d-flex align-items-start\"\n        id=\"fancy-scrollbar\"\n      >\n        <Droppable\n          droppableId=\"board\"\n          type=\"COLUMN\"\n          direction=\"horizontal\"\n          ignoreContainerClipping={true}\n          isCombineEnabled={false}\n        >\n          {(provided: DroppableProvided) => (\n            <div>\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"d-flex align-items-start\"\n              >\n                {listsComponents}\n                <AddItemList\n                  handleAddListClicked={(name) => handleAddListClicked(name)}\n                  index={lists.length}\n                />\n                {provided.placeholder}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext>\n  );\n}\n\nfunction BoardName({ name }: any) {\n  return (\n    <nav className=\"m-0 fs-5 ps-3 text-color mt-1 text-center\">{name}</nav>\n  );\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  lists: state.lists.lists,\n  boardPreferences: state.boards.boardPreferences,\n});\n\nexport default connect(mapStateToProps, {\n  fetchLists,\n  addList,\n  onDragEnd,\n  fetchListsSucceeded,\n})(KanbanBoard);\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { clearLocalStorage, isAuthenticated } from \"./authService\";\n\nfunction Account() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const history = useHistory();\n\n  const logout = () => {\n    clearLocalStorage();\n    setIsMenuOpen(false);\n    history.push(\"/login\");\n  };\n\n  if (!isAuthenticated()) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-end text-color\">\n      <i\n        className=\"bi bi-three-dots-vertical\"\n        onClick={() => setIsMenuOpen(!isMenuOpen)}\n      />\n      {isMenuOpen && (\n        <div className=\"account-menu-options text-dark fs-6 text-center\">\n          <div>Account</div>\n          <hr />\n          <div\n            className=\"account-menu-option text-start clickable\"\n            onClick={logout}\n          >\n            Logout\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Account;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Account from \"../authentication/Account\";\n\nfunction Header() {\n  const { pathname } = useLocation();\n  return (\n    <nav className=\"navbar d-flex justify-content-center fs-4 row m-0 dimmed-background\">\n      {pathname !== \"/\" ? (\n        <Link to=\"/\" className=\"col-4\">\n          <i className=\"bi bi-arrow-left-circle header-link\" />\n        </Link>\n      ) : (\n        <span className=\"col-4\" />\n      )}\n      <Link to=\"/\" className=\"col-4 text-center header-link\">\n        Not Trello\n      </Link>\n      <span className=\"col-4\">\n        <Account />\n      </span>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { Redirect, Route } from \"react-router-dom\";\nimport { isAuthenticated } from \"../authentication/authService\";\n\nfunction ProtectedRoute({ component: Component, ...rest }: any) {\n  if (isAuthenticated()) {\n    return (\n      <Route {...rest} render={(props) => <Component {...rest} {...props} />} />\n    );\n  }\n\n  return <Redirect to={{ pathname: \"/login\" }} />;\n}\n\nexport default ProtectedRoute;\n","interface BoardState {\n  boards: Board[];\n  boardPreferences: Map<string, BoardPref>;\n}\n\nconst initialSate: BoardState = {\n  boards: [],\n  boardPreferences: new Map(),\n};\n\nconst listReducer = (state = initialSate, action: BoardAction): BoardState => {\n  switch (action.type) {\n    case \"FETCH_BOARDS_SUCCEEDED\":\n      return {\n        ...state,\n        boards: action.boards,\n        boardPreferences: action.boardPrefs,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","interface CardState {\n  card: Card | null;\n  updating: boolean;\n}\n\nconst initialSate: CardState = {\n  card: null,\n  updating: false,\n};\n\nconst cardReducer = (state = initialSate, action: ListAction): CardState => {\n  switch (action.type) {\n    case \"FETCH_CARD_BY_ID_SUCCEEDED\":\n      return {\n        ...state,\n        card: action.card,\n      };\n    case \"RESET_CARD_STATE\":\n      return {\n        ...state,\n        card: null,\n      };\n    case \"ADD_COMMENT_SUCCEEDED\":\n      let updatedCard;\n      if (state.card !== null) {\n        const newActionsList = [action.comment].concat(state.card?.actions);\n        updatedCard = { ...state.card, actions: newActionsList };\n      }\n      return {\n        ...state,\n        card: updatedCard || null,\n      };\n    case \"UPDATE_COMMENT_SUCCEEDED\":\n      let updatedComment;\n      if (state.card !== null) {\n        updatedComment = {\n          ...state.card,\n          actions: [...(state.card?.actions || []), action.comment],\n        };\n      }\n      return {\n        ...state,\n        card: updatedComment || null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cardReducer;\n","interface ListState {\n  lists: List[];\n}\n\nconst initialSate: ListState = {\n  lists: [],\n};\n\nconst listReducer = (state = initialSate, action: ListAction): ListState => {\n  switch (action.type) {\n    case \"FETCH_LISTS_SUCCEEDED\":\n      return {\n        ...state,\n        lists: action.lists,\n      };\n    case \"REORDER_LISTS_SUCCEEDED\":\n      return {\n        ...state,\n        lists: action.lists,\n      };\n    case \"ADD_LIST_SUCCEEDED\":\n      return {\n        ...state,\n        lists: [...state.lists, action.list],\n      };\n    case \"UPDATE_LIST_SUCCEEDED\":\n      const updatedListName = state.lists.map((list) => (list.id === action.list.id ? { ...list, name: action.list.name } : list));\n      return {\n        ...state,\n        lists: updatedListName,\n      };\n    case \"ADD_CARD_SUCCEEDED\":\n      const updatedListWithCard: List[] = state.lists.map((list) =>\n        list.id === action.idList\n          ? { ...list, cards: [...list.cards, action.card] }\n          : list\n      );\n      return {\n        ...state,\n        lists: updatedListWithCard,\n      };\n    case \"ARCHIVE_LIST_SUCCEEDED\":\n      const list: List[] = state.lists.filter(\n        (list) => list.id !== action.idList\n      );\n      return {\n        ...state,\n        lists: [...list],\n      };\n    case \"ARCHIVE_CARD_SUCCEEDED\":\n      const listWithoutCard: List[] = state.lists.map((list) => {\n        return {\n          ...list,\n          cards: list.cards.filter((card) => card.id !== action.idCard),\n        };\n      });\n      return {\n        ...state,\n        lists: listWithoutCard,\n      };\n    case \"UPDATE_CARD_SUCCEEDED\":\n      const updatedCardList = state.lists.map((list) => {\n        if (list.id === action.card.idList) {\n          const cardsWithoutUpdatedOne = list.cards.filter(\n            (card) => card.id !== action.card.id\n          );\n          return { ...list, cards: [...cardsWithoutUpdatedOne, action.card] };\n        }\n        return list;\n      });\n      return {\n        ...state,\n        lists: updatedCardList,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport boards from \"./boards/boardReducer\";\nimport cards from \"./cards/cardReducer\";\nimport lists from \"./lists/listReducer\";\n\nconst rootReducer = combineReducers({ lists, cards, boards });\n\nexport type ApplicationState = ReturnType<typeof store.getState>;\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./authentication/LoginPage\";\nimport Boards from \"./boards/Boards\";\nimport KanbanBoardView from \"./boards/KanbanBoard\";\nimport Header from \"./header/Header\";\nimport ProtectedRoute from \"./shared/ProtectedRoute\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"min-vh-100 text-light root-container\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <ProtectedRoute\n              exact={true}\n              path=\"/b/:id/:name\"\n              component={KanbanBoardView}\n            />\n            <ProtectedRoute path=\"/\" component={Boards} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}